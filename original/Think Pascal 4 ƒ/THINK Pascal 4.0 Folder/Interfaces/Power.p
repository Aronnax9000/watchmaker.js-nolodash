{	This file has been processed by The THINK Pascal Source Converter, v1.1.	}{}{Created: Sunday, January 6, 1991 at 10:54 PM}{    Power.p}{    Pascal Interface to the Macintosh Libraries}{}{        Copyright Apple Computer, Inc.    1989-1990}{        All rights reserved}{}unit Power;interface	const{ Bit positions for ModemByte }		modemOnBit = 0;		ringWakeUpBit = 2;		modemInstalledBit = 3;		ringDetectBit = 4;		modemOnHookBit = 5;{ masks for ModemByte }		modemOnMask = $1;		ringWakeUpMask = $4;		modemInstalledMask = $8;		ringDetectMask = $10;		modemOnHookMask = $20;{ bit positions for BatteryByte }		chargerConnBit = 0;		hiChargeBit = 1;		chargeOverFlowBit = 2;		batteryDeadBit = 3;		batteryLowBit = 4;		connChangedBit = 5;{ masks for BatteryByte }		chargerConnMask = $1;		hiChargeMask = $2;		chargeOverFlowMask = $4;		batteryDeadMask = $8;		batteryLowMask = $10;		connChangedMask = $20;{ commands to SleepQRec sleepQProc }		sleepRequest = 1;		sleepDemand = 2;		sleepWakeUp = 3;		sleepRevoke = 4;{ SleepQRec.sleepQFlags }		noCalls = 1;		noRequest = 2;		slpQType = 16;		sleepQType = 16;	type		ModemByte = Byte;		BatteryByte = Byte;		PMResultCode = LONGINT;		SleepQRecPtr = ^SleepQRec;		SleepQRec = record				sleepQLink: SleepQRecPtr;				sleepQType: INTEGER;    {type = 16}				sleepQProc: ProcPtr;    {Pointer to sleep routine}				sleepQFlags: INTEGER;			end;	function DisableWUTime: OSErr;	function GetWUTime (var WUTime: LONGINT; var WUFlag: Byte): OSErr;	function SetWUTime (WUTime: LONGINT): OSErr;	function BatteryStatus (var Status: Byte; var Power: Byte): OSErr;	function ModemStatus (var Status: Byte): OSErr;	function IdleUpdate: LONGINT;	inline		$A285, $2E80;	function GetCPUSpeed: LONGINT;	inline		$70FF, $A485, $2E80;	procedure EnableIdle;	inline		$7000, $A485;	procedure DisableIdle;	inline		$7001, $A485;	procedure SleepQInstall (qRecPtr: SleepQRecPtr);	inline		$205F, $A28A;	procedure SleepQRemove (qRecPtr: SleepQRecPtr);	inline		$205F, $A48A;	procedure AOn;	inline		$7004, $A685;	procedure AOnIgnoreModem;	inline		$7005, $A685;	procedure BOn;	inline		$7000, $A685;	procedure AOff;	inline		$7084, $A685;	procedure BOff;	inline		$7080, $A685;    { UsingPower }implementationend.
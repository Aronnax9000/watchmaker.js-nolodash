{	This file has been processed by The THINK Pascal Source Converter, v1.1.	}{}{	File:		PictUtil.p}{}{	Contains:	The pascal interface file for the picture utilities package.}{}{	Copyright:	© 1990 by Apple Computer, Inc., all rights reserved.}{}{}unit PictUtil;interface	uses		Palettes;{----------------------------------------------------------------------------------------------------------}	const{verbs for the GetPictInfo, GetPixMapInfo, and NewPictInfo calls}		returnColorTable = 1;		returnPalette = 2;		recordComments = 4;		recordFontInfo = 8;		suppressBlackAndWhite = 16;{color pick methods}		systemMethod = 0;	{system color pick method}		popularMethod = 1;	{method that chooses the most popular set of colors}		medianMethod = 2;	{method that chooses a good average mix of colors}{color bank types}		ColorBankIsCustom = -1;		ColorBankIsExactAnd555 = 0;		ColorBankIs555 = 1;{----------------------------------------------------------------------------------------------------------}	type		PictInfoID = LONGINT;		CommentSpecHandle = ^CommentSpecPtr;		CommentSpecPtr = ^CommentSpec;		CommentSpec = record				count: INTEGER;					{number of occurrances of this comment ID}				ID: INTEGER; 					{ID for the comment in the picture}			end;		FontSpecHandle = ^FontSpecPtr;		FontSpecPtr = ^FontSpec;		FontSpec = record				pictFontID: INTEGER;					{ID of the font in the picture}				sysFontID: INTEGER; 					{ID of the same font in the current system file}				size: array[0..3] of LONGINT;	{bit array of all the sizes found (1..127) (bit 0 means > 127)}				style: INTEGER; 					{combined style of all occurrances of the font}				nameOffset: LONGINT; 					{offset into the fontNamesHdl handle for the font’s name}			end;		PictInfoHandle = ^PictInfoPtr;		PictInfoPtr = ^PictInfo;		PictInfo = record				version: INTEGER;					{this is always zero, for now}				uniqueColors: LONGINT;					{the number of actual colors in the picture(s)/pixmap(s)}				thePalette: PaletteHandle;				{handle to the palette information}				theColorTable: CTabHandle;					{handle to the color table}				hRes: Fixed;						{maximum horizontal resolution for all the pixmaps}				vRes: Fixed;						{maximum vertical resolution for all the pixmaps}				depth: INTEGER;					{maximum depth for all the pixmaps (in the picture)}				sourceRect: Rect;						{the picture frame rectangle (this contains the entire picture)}				textCount: LONGINT;					{total number of text strings in the picture}				lineCount: LONGINT;					{total number of lines in the picture}				rectCount: LONGINT;					{total number of rectangles in the picture}				rRectCount: LONGINT;					{total number of round rectangles in the picture}				ovalCount: LONGINT;					{total number of ovals in the picture}				arcCount: LONGINT;					{total number of arcs in the picture}				polyCount: LONGINT;					{total number of polygons in the picture}				regionCount: LONGINT;					{total number of regions in the picture}				bitMapCount: LONGINT;					{total number of bitmaps in the picture}				pixMapCount: LONGINT;					{total number of pixmaps in the picture}				commentCount: LONGINT;					{total number of comments in the picture}				uniqueComments: LONGINT;					{the number of unique comments in the picture}				commentHandle: CommentSpecHandle;			{handle to all the comment information}				uniqueFonts: LONGINT;					{the number of unique fonts in the picture}				fontHandle: FontSpecHandle;				{handle to the FontSpec information}				fontNamesHandle: Handle;						{handle to the font names}				reserved1: LONGINT;				reserved2: LONGINT;			end;{----------------------------------------------------------------------------------------------------------}	function GetPictInfo (thePictHandle: PicHandle; var thePictInfo: PictInfo; verb: INTEGER; colorsRequested: INTEGER; colorPickMethod: INTEGER; version: INTEGER): OSErr;	inline		$303C, $0800, $A831;	function GetPixMapInfo (thePixMapHandle: PixMapHandle; var thePictInfo: PictInfo; verb: INTEGER; colorsRequested: INTEGER; colorPickMethod: INTEGER; version: INTEGER): OSErr;	inline		$303C, $0801, $A831;	function NewPictInfo (var thePictInfoID: PictInfoID; verb: INTEGER; colorsRequested: INTEGER; colorPickMethod: INTEGER; version: INTEGER): OSErr;	inline		$303C, $0602, $A831;	function RecordPictInfo (thePictInfoID: PictInfoID; thePictHandle: PicHandle): OSErr;	inline		$303C, $0403, $A831;	function RecordPixMapInfo (thePictInfoID: PictInfoID; thePixMapHandle: PixMapHandle): OSErr;	inline		$303C, $0404, $A831;	function RetrievePictInfo (thePictInfoID: PictInfoID; var thePictInfo: PictInfo; colorsRequested: INTEGER): OSErr;	inline		$303C, $0505, $A831;	function DisposPictInfo (thePictInfoID: PictInfoID): OSErr;	inline		$303C, $0206, $A831;{----------------------------------------------------------------------------------------------------------}    { UsingPictUtil }implementationend.
{	This file has been processed by The THINK Pascal Source Converter, v1.1.	}{}{	FileTransfers.p}{	Pascal Interface to the File Transfer Manager}{	}{	Copyright © Apple Computer, Inc. 1988-90}{	All rights reserved}{}unit FileTransfers;interface	uses		AppleTalk, CTBUtilities;	const{ current file transfer manager version }		curFTVersion = 2;{ FTErr }		ftGenericError = -1;		ftNoErr = 0;		ftRejected = 1;		ftFailed = 2;		ftTimeOut = 3;		ftTooManyRetry = 4;		ftNotEnoughDSpace = 5;		ftRemoteCancel = 6;		ftWrongFormat = 7;		ftNoTools = 8;		ftUserCancel = 9;		ftNotSupported = 10;{ FTFlags }		ftIsFTMode = $00000001;		ftNoMenus = $00000002;		ftQuiet = $00000004;		ftSucc = $00000080;{ FTAttributes }		ftSameCircuit = $0001;		ftSendDisable = $0002;		ftReceiveDisable = $0004;		ftTextOnly = $0008;		ftNoStdFile = $0010;{ FTDirection }		ftReceiving = 0;		ftTransmitting = 1;		ftFullDuplex = 2;{ FTChooseRec messages	}		ftChooseNochange = 1;		ftChooseBackdoor = 2;	type		FTErr = OSErr;		FTFlags = LONGINT;		FTAttributes = INTEGER;		FTDirection = INTEGER;	{ FTChoose data structures }		FTChooseRecPtr = ^FTChooseRec;		FTChooseRec = record				reserved: LONGINT;				msg: LONGINT;				idleProc: ProcPtr;				filterProc: ProcPtr;				newTool: Str63;				newConfig: Ptr;				eventProc: ProcPtr;			end;		FTHandle = ^FTPtr;		FTPtr = ^FTRecord;		FTRecord = packed record				procID: INTEGER;				flags: FTFlags;				errCode: FTErr;				refCon: LONGINT;				userData: LONGINT;				defProc: ProcPtr;				config: Ptr;				oldConfig: Ptr;				environsProc: ProcPtr;				reserved1: LONGINT;				reserved2: LONGINT;				ftPrivate: Ptr;				sendProc: ProcPtr;				recvProc: ProcPtr;				writeProc: ProcPtr;				readProc: ProcPtr;				owner: WindowPtr;				direction: FTDirection;				theReply: SFReply;				writePtr: LONGINT;				readPtr: LONGINT;				theBuf: ^char;				bufSize: LONGINT;				autoRec: Str255;				attributes: FTAttributes;			end;	function InitFT: FTErr;	function FTGetVersion (hFT: FTHandle): Handle;	function FTGetFTVersion: INTEGER;	function FTNew (procID: INTEGER; flags: FTFlags; sendProc: ProcPtr; recvProc: ProcPtr; readProc: ProcPtr; writeProc: ProcPtr; environsProc: ProcPtr; owner: WindowPtr; refCon: LONGINT; userData: LONGINT): FTHandle;	procedure FTDispose (hFT: FTHandle);	function FTStart (hFT: FTHandle; direction: FTDirection; fileInfo: SFReply): FTErr;	function FTAbort (hFT: FTHandle): FTErr;	procedure FTExec (hFT: FTHandle);	procedure FTActivate (hFT: FTHandle; activate: BOOLEAN);	procedure FTResume (hFT: FTHandle; resume: BOOLEAN);	function FTMenu (hFT: FTHandle; menuID: INTEGER; item: INTEGER): BOOLEAN;	function FTChoose (var hFT: FTHandle; where: Point; idleProc: ProcPtr): INTEGER;	function FTPChoose (var hFT: FTHandle; where: Point; var cRec: FTChooseRec): INTEGER;	procedure FTEvent (hFT: FTHandle; theEvent: EventRecord);	function FTValidate (hFT: FTHandle): BOOLEAN;	procedure FTDefault (var theConfig: Ptr; procID: INTEGER; allocate: BOOLEAN);	function FTSetupPreflight (procID: INTEGER; var magicCookie: LONGINT): Handle;	procedure FTSetupSetup (procID: INTEGER; theConfig: Ptr; count: INTEGER; theDialog: DialogPtr; var magicCookie: LONGINT);	function FTSetupFilter (procID: INTEGER; theConfig: Ptr; count: INTEGER; theDialog: DialogPtr; var theEvent: EventRecord; var theItem: INTEGER; var magicCookie: LONGINT): BOOLEAN;	procedure FTSetupItem (procID: INTEGER; theConfig: Ptr; count: INTEGER; theDialog: DialogPtr; var theItem: INTEGER; var magicCookie: LONGINT);	procedure FTSetupCleanup (procID: INTEGER; theConfig: Ptr; count: INTEGER; theDialog: DialogPtr; var magicCookie: LONGINT);	procedure FTSetupXCleanup (procID: INTEGER; theConfig: Ptr; count: INTEGER; theDialog: DialogPtr; OKed: BOOLEAN; var magicCookie: LONGINT);	procedure FTSetupPostflight (procID: INTEGER);	function FTGetConfig (hFT: FTHandle): Ptr;	function FTSetConfig (hFT: FTHandle; thePtr: Ptr): INTEGER;	function FTIntlToEnglish (hFT: FTHandle; inputPtr: Ptr; var outputPtr: Ptr; language: INTEGER): OSErr;	function FTEnglishToIntl (hFT: FTHandle; inputPtr: Ptr; var outputPtr: Ptr; language: INTEGER): OSErr;	procedure FTGetToolName (procID: INTEGER; var name: Str255);	function FTGetProcID (name: Str255): INTEGER;	procedure FTSetRefCon (hFT: FTHandle; refCon: LONGINT);	function FTGetRefCon (hFT: FTHandle): LONGINT;	procedure FTSetUserData (hFT: FTHandle; userData: LONGINT);	function FTGetUserData (hFT: FTHandle): LONGINT;	procedure FTGetErrorString (hFT: FTHandle; id: INTEGER; var errMsg: Str255); {UsingFileTransfers}implementationend.
{	This file has been processed by The THINK Pascal Source Converter, v1.1.	}{}{Created: Sunday, January 6, 1991 at 11:15 PM}{    Serial.p}{    Pascal Interface to the Macintosh Libraries}{}{        Copyright Apple Computer, Inc.    1985-1990}{        All rights reserved}{}unit Serial;interface	const		baud300 = 380;		baud600 = 189;		baud1200 = 94;		baud1800 = 62;		baud2400 = 46;		baud3600 = 30;		baud4800 = 22;		baud7200 = 14;		baud9600 = 10;		baud19200 = 4;		baud57600 = 0;		stop10 = 16384;		stop15 = -32768;		stop20 = -16384;		noParity = 0;		oddParity = 4096;		evenParity = 12288;		data5 = 0;		data6 = 2048;		data7 = 1024;		data8 = 3072;		ctsEvent = 32;		breakEvent = 128;		xOffWasSent = 128;		dtrNegated = 64;		ainRefNum = -6;     {serial port A input}		aoutRefNum = -7;    {serial port A output}		binRefNum = -8;     {serial port B input}		boutRefNum = -9;    {serial port B output}	type		SPortSel = (sPortA, sPortB);		SerShk = packed record				fXOn: Byte;     {XOn flow control enabled flag}				fCTS: Byte;     {CTS flow control enabled flag}				xOn: CHAR;      {XOn character}				xOff: CHAR;     {XOff character}				errs: Byte;     {errors mask bits}				evts: Byte;     {event enable mask bits}				fInX: Byte;     {Input flow control enabled flag}				fDTR: Byte;     {DTR input flow control flag}			end;		SerStaRec = packed record				cumErrs: Byte;				xOffSent: Byte;				rdPend: Byte;				wrPend: Byte;				ctsHold: Byte;				xOffHold: Byte;			end;	function SerReset (refNum: INTEGER; serConfig: INTEGER): OSErr;	function SerSetBuf (refNum: INTEGER; serBPtr: Ptr; serBLen: INTEGER): OSErr;	function SerHShake (refNum: INTEGER; flags: SerShk): OSErr;	function SerSetBrk (refNum: INTEGER): OSErr;	function SerClrBrk (refNum: INTEGER): OSErr;	function SerGetBuf (refNum: INTEGER; var count: LONGINT): OSErr;	function SerStatus (refNum: INTEGER; var serSta: SerStaRec): OSErr;    { UsingSerial }implementationend.
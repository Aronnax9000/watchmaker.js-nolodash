{	This file has been processed by The THINK Pascal Source Converter, v1.1.	}{}{Created: Thursday, October 4, 1990 at 8:00 AM}{	ENET.p}{	Pascal Interface to the Macintosh Libraries}{}{	Copyright Apple Computer, Inc. 1989-1990}{	All rights reserved}{}unit ENET;interface	const		ENetSetGeneral = 253;	 {Set "general" mode}		ENetGetInfo = 252;		 {Get info}		ENetRdCancel = 251;		 {Cancel read}		ENetRead = 250;			 {Read}		ENetWrite = 249;		 {Write}		ENetDetachPH = 248;		 {Detach protocol handler}		ENetAttachPH = 247;		 {Attach protocol handler}		ENetAddMulti = 246;		 {Add a multicast address}		ENetDelMulti = 245;		 {Delete a multicast address}		eLenErr = -92;           {Length error ddpLenErr}		eMultiErr = -91;         {Multicast address error ddpSktErr}		EAddrRType = 'eadr';     {Alternate address resource type}	type		EParamBlkPtr = ^EParamBlock;		EParamBlock = packed record				qLink: QElemPtr;									{next queue entry}				qType: INTEGER; 									{queue type}				ioTrap: INTEGER;									{routine trap}				ioCmdAddr: Ptr; 									{routine address}				ioCompletion: ProcPtr;								{completion routine}				ioResult: OSErr;									{result code}				ioNamePtr: StringPtr;								{->filename}				ioVRefNum: INTEGER; 								{volume reference or drive number}				ioRefNum: INTEGER;									{driver reference number}				csCode: INTEGER;									{call command code AUTOMATICALLY set}				case INTEGER of					ENetWrite, ENetAttachPH, ENetDetachPH, ENetRead, ENetRdCancel, ENetGetInfo, ENetSetGeneral: (							eProtType: INTEGER;							{Ethernet protocol type}							ePointer: Ptr;							eBuffSize: INTEGER;								{buffer size}							eDataSize: INTEGER					); 							{number of bytes read}					ENetAddMulti, ENetDelMulti: (							eMultiAddr: array[0..5] of char					);				{Multicast Address}			end;	function EWrite (thePBptr: EParamBlkPtr; async: Boolean): OSErr;	function EAttachPH (thePBptr: EParamBlkPtr; async: Boolean): OSErr;	function EDetachPH (thePBptr: EParamBlkPtr; async: Boolean): OSErr;	function ERead (thePBptr: EParamBlkPtr; async: Boolean): OSErr;	function ERdCancel (thePBptr: EParamBlkPtr; async: Boolean): OSErr;	function EGetInfo (thePBptr: EParamBlkPtr; async: Boolean): OSErr;	function ESetGeneral (thePBptr: EParamBlkPtr; async: Boolean): OSErr;	function EAddMulti (thePBptr: EParamBlkPtr; async: Boolean): OSErr;	function EDelMulti (thePBptr: EParamBlkPtr; async: Boolean): OSErr;    { UsingENET }implementationend.